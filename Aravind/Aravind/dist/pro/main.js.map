{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cart/cart.component.css","webpack:///./src/app/cart/cart.component.html","webpack:///./src/app/cart/cart.component.ts","webpack:///./src/app/company/company.component.css","webpack:///./src/app/company/company.component.html","webpack:///./src/app/company/company.component.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/function/function.component.css","webpack:///./src/app/function/function.component.html","webpack:///./src/app/function/function.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/log/log.component.css","webpack:///./src/app/log/log.component.html","webpack:///./src/app/log/log.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/medicine/medicine.component.css","webpack:///./src/app/medicine/medicine.component.html","webpack:///./src/app/medicine/medicine.component.ts","webpack:///./src/app/newsale/newsale.component.css","webpack:///./src/app/newsale/newsale.component.html","webpack:///./src/app/newsale/newsale.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/route.module.ts","webpack:///./src/app/sales/sales.component.css","webpack:///./src/app/sales/sales.component.html","webpack:///./src/app/sales/sales.component.ts","webpack:///./src/app/search.pipe.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid bi\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'pro';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'\nimport { AppComponent } from './app.component';\nimport { RouteModule } from './/route.module';\nimport { LogComponent } from './log/log.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { FunctionComponent } from './function/function.component';\nimport { HomeComponent } from './home/home.component';\nimport { MedicineComponent } from './medicine/medicine.component';\nimport { NewsaleComponent } from './newsale/newsale.component';\nimport { SalesComponent } from './sales/sales.component';\nimport { CartComponent } from './cart/cart.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SearchPipe } from './search.pipe';\nimport { CompanyComponent } from './company/company.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LogComponent,\n    LoginComponent,\n    RegisterComponent,\n    FunctionComponent,\n    HomeComponent,\n    MedicineComponent,\n    NewsaleComponent,\n    SalesComponent,\n    CartComponent,\n    SearchPipe,\n    CompanyComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouteModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-8 offset-md-2 col-xs-12\\\">\\n    <div class=\\\"jumbotron\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"1\\\">Customer Name</label>\\n                <input type=\\\"text\\\" name=\\\"cuname\\\" id=\\\"1\\\" class=\\\"form-control\\\"[(ngModel)]=\\\"cuname\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"2\\\">Customer Ph.No</label>\\n                <input type=\\\"text\\\" name=\\\"cuno\\\" id=\\\"2\\\" class=\\\"form-control\\\"[(ngModel)]=\\\"cuno\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"3\\\">Customer Email</label>\\n                <input type=\\\"email\\\" name=\\\"cuemail\\\" id=\\\"3\\\" class=\\\"form-control\\\"[(ngModel)]=\\\"cuemail\\\">\\n              </div>\\n            </div>\\n          </div>\\n        </li>\\n        <li class=\\\"list-group-item\\\" *ngFor=\\\"let i of cdata\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <p>MedicineName : {{i.name}}</p>\\n              <p>Quantity : {{i.rq}}</p>\\n              <p>Price : {{i.price}}</p>\\n            </div>\\n            <div class=\\\"col\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col text-right\\\" align=\\\"right\\\">\\n                  <p>d</p>\\n                </div>\\n              </div>\\n              <p>{{i.rq}} X {{i.price}}</p>\\n              <h5 class=\\\"text-warning\\\">{{i.rq*i.price}}</h5>\\n            </div>\\n          </div>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-4 col-xs-6\\\">\\n              <p>No.of Items : {{l}}</p>\\n            </div>\\n            <div class=\\\"col-sm-4 col-xs-6\\\">\\n              <p>Total : {{ta}}</p>\\n            </div>\\n            <div class=\\\"col-sm-4 col-xs-12\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Make Payment</button>\\n              </div>\\n          </div>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n\n  constructor(private ds:DataService) { }\n  cdata:any[]=[];\n  ta:number=0;\n  l:number=0;\n  cuname:string=\"\";\n  cuno:string=\"\";\n  cuemail:string=\"\";\n\n  ngOnInit() {\n    this.cdata=this.ds.getCartData();\n    console.log(this.cdata);\n    this.l=this.cdata.length;\n    this.cdata.forEach(e => {\n      this.ta=this.ta+e.rq * e.price;\n    });\n\n  }\n\n  cs:any={};\n  \n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\" style=\\\"margin-top: 100px;\\\">\\n  <div class='col-md-6 col-sm-12'>\\n    <button type=\\\"button\\\" class=\\\"btn btn-warning \\\" data-toggle=\\\"modal\\\" data-target=\\\"#com\\\">Add\\n      Company</button></div>\\n  <div class=\\\"col-md-6 col-sm-12\\\" align=\\\"right\\\">\\n    <input class=\\\"st\\\" type=\\\"text\\\" [(ngModel)]=\\\"searchTerm\\\" placeholder=\\\"Search Company Here\\\">\\n    <button type=\\\"button\\\" class=\\\"bg-primary si\\\"><i class=\\\"icon ion-md-search\\\"></i></button>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal fade\\\" id=\\\"com\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n\\n      <div class=\\\"modal-body\\\">\\n\\n        <form #formRef=\\\"ngForm\\\" (ngSubmit)=\\\"add(formRef.value)\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\" control-label\\\" for=\\\"comn\\\">Company Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"comn\\\" name=\\\"cname\\\" id=\\\"comn\\\" placeholder=\\\"Company Name\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"location\\\">Location</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"location\\\" name=\\\"clocation\\\" id=\\\"location\\\" placeholder=\\\"location\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"company\\\">Email id</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" name=\\\"cemail\\\" id=\\\"email\\\" placeholder=\\\"Email\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"contact\\\">Contact Number</label>\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contact\\\" name=\\\"cnumber\\\" id=\\\"contact\\\" placeholder=\\\"Contact Number \\\">\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col \\\" align=\\\"center\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-info\\\">Add</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n    <table class=\\\"table bg-dark text-light\\\">\\n\\n      <thead>\\n        <th>Company Name</th>\\n        <th>Location</th>\\n        <th>Email-id</th>\\n        <th>Contact Number</th>\\n        <th>Delete</th>\\n        <th>Edit</th>\\n      </thead>\\n\\n      <tr *ngFor=\\\"let i of com | search:searchTerm:s\\\">\\n        <td>{{i.cname}}</td>\\n        <td>{{i.clocation}}</td>\\n        <td>{{i.cemail}}</td>\\n        <td>{{i.cnumber}}</td>\\n        <td><button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deletec(i)\\\"> X </button></td>\\n        <td> <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#edit\\\" (click)=\\\"toEdit(i)\\\">Edit</button></td>\\n      </tr>\\n    </table>\\n  </div>\\n</div>\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"edit\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close text-danger\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">X\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form #formRef1=\\\"ngForm\\\" (ngSubmit)=\\\"save(formRef1.value)\\\">\\n          <input type=\\\"hidden\\\" [(ngModel)]=\\\"e._id\\\" name=\\\"_id\\\" value=\\\"{{e._id}}\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"comn\\\">Company Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"e.cname\\\" name=\\\"cname\\\" id=\\\"comn\\\" value=\\\"{{e.cname}}\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"location\\\">Location</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"e.clocation\\\" name=\\\"clocation\\\" id=\\\"location\\\" value=\\\"{{e.clocation}}\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"company\\\">Email id</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"e.cemail\\\" name=\\\"cemail\\\" id=\\\"email\\\" value=\\\"{{e.cemail}}\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"contact\\\">Contact Number</label>\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"e.cnumber\\\" name=\\\"cnumber\\\" id=\\\"contact\\\" value=\\\"{{e.cnumber}}\\\">\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col \\\" align=\\\"center\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-info\\\">Save</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-company',\n  templateUrl: './company.component.html',\n  styleUrls: ['./company.component.css']\n})\nexport class CompanyComponent implements OnInit {\n  com:Object[];\n  e:object={};\n  s:string=\"cname\"\n  constructor(private ds:DataService,private hc:HttpClient) { }\n\n  ngOnInit() {\n    this.ds.getCompanies().subscribe(a=>this.com=a);\n    \n\n  }\n  deletec(c)\n  {\n    this.hc.delete('/app/company/'+c._id).subscribe(r=>{\n      this.ds.getCompanies().subscribe(a=>this.com=a);\n    });\n  }\n  add(data)\n  {\n    console.log(data);\n    this.hc.post('/app/company',data).subscribe(a=>{\n      alert(\"company successfully added....\");\n    });\n    this.ds.getCompanies().subscribe(a=>this.com=a);\n  }\n  toEdit(data)\n  {\n     console.log(data)\n    this.e=data;\n  }\n  save(data)\n  {\n    console.log(data);\n    this.hc.put('/app/company',data).subscribe(r=>{\n      this.ds.getCompanies().subscribe(a=>this.com=a);\n    });\n  }\n\n  identify(index, item){\n    return item.cname; \n }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  cartdata:any[]=[];\n  e:any;\n  constructor(private hc:HttpClient) { }\n\n  getMedicines():Observable<any>\n  {\n    return this.hc.get('/app/medicine')\n  }\n  getCompanies():Observable<any>\n  {  \n    return this.hc.get('/app/co')\n  }\n  sendToCart(data):Observable<any>\n  {\n    return this.hc.post('/app/newsale',data); \n  }\n  c:number=0;\n  toCart(d){\n\n    for (let i = 0; i < this.cartdata.length; i++) {\n      if(this.cartdata[i].name ==d.name)\n      {\n        this.c++;\n        console.log(this.cartdata[i].name);\n        this.cartdata[i].rq=this.cartdata[i].rq+d.rq;\n      }\n    }\n    if(this.c==0)\n    {\n      this.cartdata.push(d);\n    }\n    \n  }\n  getCartData()\n  {\n    console.log(this.cartdata);\n    return this.cartdata;\n  }\n  regDB(data):Observable<any>\n  {\n    return this.hc.post('/log/reg',data);\n  }\n\n  check(data):Observable<any>\n  {\n    return this.hc.post('/log',data);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <nav class=\\\"nav navbar-expand-lg navbar-dark bg-dark fixed-top\\\">\\n          <a routerLink=\\\"log\\\" class=\\\"navbar-brand\\\" ><img src=\\\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSHaeM73FWJY2ZMm1d8Ecraowhy_roUBdDOJ47K9gw4ZVxj9y0h\\\"  width=\\\"100px\\\" height=\\\"30px\\\"></a>\\n          <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#cn\\\"\\n              aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\" style=\\\"margin-left: auto;\\\"><span class=\\\"navbar-toggler-icon\\\"></span></button>\\n          <div class=\\\"collapse navbar-collapse mr-0\\\" id=\\\"cn\\\" >\\n            <ul class=\\\"navbar-nav mr-0\\\"style=\\\"margin-left: auto;\\\">\\n\\n                    <li class=\\\"nav-item active\\\"><a class=\\\"nav-link text-light\\\" routerLink=\\\"home\\\">Home</a></li>\\n                    <li class=\\\"nav-item\\\"><a class=\\\"nav-link text-light\\\" routerLink=\\\"RequestBlood\\\">Request Blood</a></li>\\n\\n                    <li class=\\\"nav-item\\\"><a class=\\\"nav-link text-light\\\" routerLink=\\\"../log\\\">About Us</a></li>\\n\\n\\n            </ul>\\n\\n          </div>\\n          <a class=\\\"nav-link text-light\\\" routerLink=\\\"../log\\\">LogOut</a>\\n        </nav>\\n      <nav class=\\\"navbar bg-dark\\\">\\n\\n\\n      </nav>\\n    </div>\\n  </div>\\n  <router-outlet class=\\\"text-light\\\"></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-function',\n  templateUrl: './function.component.html',\n  styleUrls: ['./function.component.css']\n})\nexport class FunctionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row pt-5 pb-5\\\" style=\\\"background-image: linear-gradient(to right top,rgba(0, 0, 0, 0.308),rgba(0, 0, 0, 0.308))\\\">\\n  <div class=\\\"col-md-8 offset-md-2 col-sm-12\\\">\\n\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n    <nav class=\\\"navbar bg-dark\\\">\\n      <a routerLink=\\\"log\\\" class=\\\"navbar-brand\\\" ><img src=\\\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSHaeM73FWJY2ZMm1d8Ecraowhy_roUBdDOJ47K9gw4ZVxj9y0h\\\"  width=\\\"100px\\\" height=\\\"30px\\\"></a>\\n      <ul class=\\\"nav\\\">\\n        <li class=\\\"nav-item\\\"><a class=\\\"nav-link text-light\\\" routerLink=\\\"../log\\\">Login</a></li>\\n      </ul>\\n    </nav>\\n  </div>\\n</div>\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-log',\n  templateUrl: './log.component.html',\n  styleUrls: ['./log.component.css']\n})\nexport class LogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\" style=\\\"background-image: linear-gradient(rgba(0, 0, 0, 0.514),#000)\\\">\\n  <div class=\\\"col-8 offset-2 mb-5 pb-5\\\" style=\\\"background-image: url(https://png.pngtree.com/thumb_back/fh260/back_pic/00/02/92/70561bd49283afe.jpg);width: 100%;height: 400px;background-size: cover; background-repeat: no-repeat;margin-top: 100px;\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6 col-sm-0\\\"></div>\\n      <div class=\\\"col-md-6 col-sm-12 mt-3 pt-5 \\\">\\n        <form class=\\\"form\\\" #lf=\\\"ngForm\\\" (ngSubmit)=\\\"login(lf.value)\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"un\\\">USERNAME :*</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"un\\\" id=\\\"un\\\" placeholder=\\\"Enter User Name\\\" [(ngModel)]=name #u=\\\"ngModel\\\" required>\\n            <label class=\\\"text-danger\\\" *ngIf=\\\"u.touched && u.pristine\\\">\\n              Username required\\n            </label>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"pw\\\">Password :*</label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"pwd\\\" id=\\\"pw\\\" placeholder=\\\"Enter Password\\\" [(ngModel)]=pass #p=\\\"ngModel\\\" required>\\n            <div class=\\\"form-check form-check-inline\\\">\\n              <label class=\\\"form-check-label\\\" >\\n                <input type=\\\"checkbox\\\" onchange=\\\"document.getElementById('pw').type = this.checked ? 'text' : 'password'\\\"\\n                  class=\\\"form-check-input\\\" name=\\\"sp\\\" id=\\\"sp\\\" value=\\\"checkedValue\\\">\\n                Show Password\\n              </label>\\n              \\n            </div>\\n            <label class=\\\"text-danger\\\" *ngIf=\\\"p.touched && p.pristine\\\">\\n              Password required\\n            </label>\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"lf.invalid\\\" >Login</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" routerLink=\\\"reg\\\" style=\\\"margin-left: 63%;\\\">Register</button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { checkAndUpdateBinding } from \"@angular/core/src/render3/instructions\";\nimport { DataService } from \"../data.service\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"]\n})\nexport class LoginComponent implements OnInit {\n  constructor(private route: Router, private ds: DataService) {}\n  name: string = null;\n  pass: string = null;\n  ngOnInit() {}\n  login(data) {\n    console.log(data);\n    this.ds.check(data).subscribe(r => {\n     if(r)\n     {\n      alert(\"Logged in Successfully\");\n      this.route.navigate([\"/app/RequestBlood\"]);\n     }\n     else{\n       alert(\"Invalid ahtuentication\");\n     }\n    });\n  }\n}\n","module.exports = \".st{\\r\\n    width: 50%;\\r\\n    height: 30px;\\r\\n    margin: 0px;\\r\\n    border: 0px;\\r\\n}\\r\\n.sb{\\r\\n    width: 20%;\\r\\n    height: 30px;\\r\\n    margin: 0px;\\r\\n    border: 0px;\\r\\n}\\r\\n.si{\\r\\n    width: 5%;\\r\\n    height: 30px;\\r\\n    margin: 0px;\\r\\n    border: 0px;\\r\\n}\\r\\n@media only screen and(max-width :660px)\\r\\n{\\r\\n    font-size: 8px;\\r\\n    table{\\r\\n        -webkit-column-width: 70%;\\r\\n                column-width: 70%;\\r\\n    }\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-10 offset-md-1 col-sm-12\\\">\\n    <div class=\\\"row\\\" style=\\\"margin-top: 100px;\\\">\\n\\n      <div class=\\\"col-md-6 col-xs-7\\\" align=\\\"right\\\">\\n        <!-- <select class=\\\"sb bg-primary\\\" (change)=\\\"filterForeCasts($event.target.value)\\\">\\n          <option *ngFor=\\\"let details of mdetails\\\" value={{details}}>\\n            {{details}}\\n          </option>\\n        </select> -->\\n        <input class=\\\"st\\\" type=\\\"text\\\" placeholder=\\\"Search Blood Group\\\" [(ngModel)]=\\\"searchTerm\\\">\\n        <button type=\\\"button\\\" class=\\\"bg-primary si\\\"><i class=\\\"icon ion-md-search\\\"></i></button>\\n      </div>\\n    </div>\\n    <table class=\\\"table bg-dark text-light mx-auto\\\">\\n      <thead>\\n        <tr>\\n          <th> Donor Name</th>\\n          <th>Phone</th>\\n          <th>Email</th>\\n          <th>Blood Group</th>\\n          <th>Gender</th>\\n\\n      </thead>\\n      <tbody>\\n\\n        <tr *ngFor=\\\"let i of medi | search:searchTerm\\\">\\n          <td scope=\\\"row\\\">{{i.dfn}}</td>\\n          <td>{{i.phone}}</td>\\n\\n          <td>{{i.em}}</td>\\n\\n          <td>{{i.selectbg}}</td>\\n         <td>{{i.gender}}</td>\\n\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n  </div>\\n</div>\\n\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"addm\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modelTitleId\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form #formRef=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(formRef.value)\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\" control-label\\\" for=\\\"medicine\\\">Medicine Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"medicine\\\" name=\\\"name\\\" id=\\\"medicine\\\" placeholder=\\\"Medicine Name\\\">\\n\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\" control-label\\\" for=\\\"type\\\">Medicine type</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"type\\\" name=\\\"type\\\" id=\\\"type\\\" placeholder=\\\"Medicine Type\\\">\\n\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\" control-label\\\" for=\\\"use\\\">Medicine Usage</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"use\\\" name=\\\"usage\\\" id=\\\"use\\\" placeholder=\\\"Medicine Use\\\">\\n\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"company2\\\">Medicine Company</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"company\\\" name=\\\"company\\\" id=\\\"company2\\\" placeholder=\\\"Medicine Company\\\">\\n\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"quantity2\\\">Medicine Quantity</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"quantity\\\" name=\\\"quantity\\\" id=\\\"quantity2\\\" placeholder=\\\"Medicine Quantity\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\" control-label\\\" for=\\\"price2\\\">Medicine Price</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"price\\\" name=\\\"price\\\" id=\\\"price2\\\" placeholder=\\\"Medicine Price\\\">\\n\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\" align=\\\"center\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Save</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"edit\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close text-danger\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">X\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form #eref=\\\"ngForm\\\" (ngSubmit)=\\\"save(eref.value)\\\">\\n            <input type=\\\"hidden\\\" [(ngModel)]=\\\"e._id\\\" name=\\\"_id\\\" value=\\\"{{e._id}}\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\" control-label\\\" for=\\\"medi\\\">Medicine Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"e.name\\\" name=\\\"name\\\" id=\\\"medi\\\" value=\\\"{{e.name}}\\\">\\n\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\" control-label\\\" for=\\\"type2\\\">Medicine type</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"e.type\\\" name=\\\"type\\\" id=\\\"type2\\\" value=\\\"{{e.type}}\\\">\\n\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\" control-label\\\" for=\\\"use2\\\">Medicine Usage</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"e.usage\\\" name=\\\"usage\\\" id=\\\"use2\\\" value=\\\"{{e.usage}}\\\">\\n\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"company\\\">Medicine Company</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"e.company\\\" name=\\\"company\\\" id=\\\"company\\\" value=\\\"{{e.company}}\\\">\\n\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\" for=\\\"quantity\\\">Medicine Quantity</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"e.quantity\\\" name=\\\"quantity\\\" id=\\\"quantity\\\" value=\\\"{{e.quantity}}\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\" control-label\\\" for=\\\"price\\\">Medicine Price</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"e.price\\\" name=\\\"price\\\" id=\\\"price\\\" value=\\\"{{e.price}}\\\">\\n\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\" align=\\\"center\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" >Save</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { HttpClient } from '@angular/common/http'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-medicine',\n  templateUrl: './medicine.component.html',\n  styleUrls: ['./medicine.component.css']\n})\nexport class MedicineComponent implements OnInit {\n  s:string=\"name\";\n  mdetails=['name','type', 'usage', 'company','quantity','price'];\n  e:object={};\n  \n  name:string=\"\";\n  type:string=\"\";\n  usage:string=\"\";\n  company:string=\"\";\n  quantity:number;\n  price:number;\n  constructor(private ds:DataService,private hc:HttpClient,private route:Router) { }\n  medi:Object[];\n  ngOnInit() {\n    this.ds.getMedicines().subscribe(a=>this.medi=a);\n    \n  }\n  filterForeCasts(x)\n  {\n    this.s=x;\n  }\n  delete(i)\n  {\n    this.hc.delete('/app/medicine/'+i._id).subscribe(r=>{\n      this.ds.getMedicines().subscribe(a=>this.medi=a);\n    })\n  }\n  onSubmit(data)\n  {\n    console.log(data);\n    this.hc.post('/app/medicine',data).subscribe(r=>{\n      alert(\"successfully add..\");\n      this.route.navigate(['/app/medicine']);\n      this.ds.getMedicines().subscribe(a=>this.medi=a);\n    });\n   \n\n  }\n  toEdit(data)\n  {\n    this.e=data;\n  }\n  save(data)\n  {\n    console.log(data);\n    this.hc.put('/app/medicine',data).subscribe(r=>{\n      this.ds.getMedicines().subscribe(a=>this.medi=a);\n    });\n  } \n\n}\n","module.exports = \".form-control-clear {\\r\\n    z-index: 10;\\r\\n    pointer-events: auto;\\r\\n    cursor: pointer;\\r\\n  }\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-10 offset-md-1 col-sm-12\\\">\\n        <div class=\\\"row\\\" style=\\\"margin-top: 100px;\\\">\\n            <div class='col-md-4 col-xs-5'>\\n                <div class=\\\"form-group  has-feedback has-clear\\\">\\n                    <label for=\\\"sm\\\">Select Medicine :</label>\\n\\n                    <div class=\\\"dropdown\\\">\\n                        <a class=\\\"\\\" id=\\\"triggerId\\\" data-toggle=\\\"dropdown\\\"><input class=\\\"form-control\\\" id=\\\"sm\\\" type=\\\"text\\\"\\n                                [(ngModel)]=\\\"searchTerm\\\"><span class=\\\"form-control-clear close form-control-feedback hidden\\\">X</span></a>\\n                        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"triggerId\\\">\\n                            <li class=\\\"dropdown-item\\\" *ngFor=\\\"let i of medi | search:searchTerm:s\\\" (click)=\\\" display(i)\\\">{{i.name}}</li>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-4 col-xs-7\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"quant\\\">Quantity :</label>\\n                    <input type=\\\"number\\\" name=\\\"quant\\\" id=\\\"quant\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Quantity here ....\\\" [(ngModel)]=rq (keyup)=\\\"check()\\\">\\n                    <label class=\\\"text-danger\\\" *ngIf=\\\"b\\\">Insufficient Quantity</label>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-4 col-xs-7 mx-auto\\\" align=\\\"center\\\">\\n                \\n                <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"addtocart()\\\">Add to Cart</button>\\n            </div>\\n        </div>\\n        <table class=\\\"table bg-dark text-light mx-auto\\\">\\n            <thead>\\n                <tr>\\n                    <th>Medicine Name</th>\\n                    <th>Type</th>\\n                    <th>Usage</th>\\n                    <th>Company</th>\\n                    <th>Quantity</th>\\n                    <th>Price</th>\\n\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr>\\n                    <td scope=\\\"row\\\">{{i.name}}</td>\\n                    <td>{{i.type}}</td>\\n                    <td>{{i.usage}}</td>\\n                    <td>{{i.company}}</td>\\n                    <td class=\\\"{{i.quantity <= 10 ? 'text-danger':'text-light'}}\\\">{{i.quantity}}</td>\\n                    <td>{{i.price}}</td>\\n                </tr>\\n            </tbody>\\n        </table>\\n\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-newsale',\n  templateUrl: './newsale.component.html',\n  styleUrls: ['./newsale.component.css']\n})\nexport class NewsaleComponent implements OnInit {\n  medi:Object[];\n  cart:Object[]=[];\n  searchTerm:string;\n  constructor(private ds:DataService,private hc:HttpClient) { }\n  i:any={};\n  aq:number;\n  rq:number;\n  b:boolean=false;\n  ngOnInit() {\n    this.ds.getMedicines().subscribe(a=>this.medi=a);\n  }\n  s:string=\"name\";\n  display(data)\n  {\n    console.log(data);\n    this.i=data;\n    this.searchTerm=data.name;\n    this.aq=data.quantity;\n  }\n  check()\n  {\n    if(this.rq>this.i.quantity)\n    {\n      this.b=true;\n    }\n    else\n    {\n      this.b=false;\n    }\n  }\n  d:Object={};\n  bd:any={};\n  addtocart()\n  {\n    let d:any=this.i;\n    \n    if(this.rq<=this.i.quantity)\n    {\n      d=this.i;\n      d.rq=this.rq;\n      this.i.quantity=this.i.quantity-this.rq;\n      console.log(d);\n      this.ds.toCart(d);\n      this.bd._id=this.i._id;\n      this.bd.quantity=this.i.quantity;\n      console.log(this.bd);\n      this.hc.put('/app/newsale',this.bd).subscribe(r=>{});\n    }\n   \n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\" style=\\\"background-image: linear-gradient(rgba(0, 0, 0, 0.281),#000); height: 100%;overflow:hidden;\\\">\\n  <div class=\\\"col\\\" style=\\\"margin-bottom: 10%;\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-4 offset-4 mt-md-5 mb-md-5  pt-md-5 text-light\\\" style=\\\" background-image: url(https://supsystic-42d7.kxcdn.com/_assets/forms/img/bg/bg_support_form.jpg);background-size: cover;margin-top:20%;padding: auto;\\\">\\n        <div class=\\\"container\\\">\\n          <form #rf=\\\"ngForm\\\" (ngSubmit)=\\\"register(rf.value)\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"pn\\\">Phone :</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"phone\\\" id=\\\"pn\\\" placeholder=\\\"Enter Phone\\\"  [(ngModel)]=phone  #pn=\\\"ngModel\\\" required>\\n              <label class=\\\"text-danger\\\" *ngIf=\\\"pn.touched && (pn.pristine || pn.value=='')\\\">\\n              Phone Required\\n              </label>\\n\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"em\\\">Email :</label>\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"em\\\" id=\\\"em\\\" placeholder=\\\"Enter Email\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\\\" [(ngModel)]=email #e=\\\"ngModel\\\" required>\\n              <label class=\\\"text-danger\\\" *ngIf=\\\"e.touched && (e.pristine || e.value=='')\\\">\\n                Email Required\\n              </label>\\n              <label class=\\\"text-danger\\\" *ngIf=\\\"e.invalid && e.dirty && rp.value!=''\\\">\\n                Enter valid Email\\n              </label>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"un\\\">Donors Full Name :</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"dfn\\\" id=\\\"dfn\\\" placeholder=\\\"Enter Full Name\\\" [(ngModel)]=dfname\\n                required #fn=\\\"ngModel\\\">\\n              <label class=\\\"text-danger\\\" *ngIf=\\\"fn.touched && (fn.pristine || fn.value=='')\\\">\\n                Donors Full Name  Required\\n              </label>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"exampleSelect1\\\">Blood Group</label>\\n              <select name=\\\"selectbg\\\" [(ngModel)]=\\\"selectbg\\\" class=\\\"form-control\\\" id=\\\"exampleSelect1\\\">\\n                <option *ngFor=\\\"let item of bg\\\" [value]=\\\"item\\\">{{item}}</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"un\\\">USERNAME :</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"un\\\" id=\\\"un\\\" placeholder=\\\"Enter User Name\\\" [(ngModel)]=uname\\n                required #u=\\\"ngModel\\\">\\n              <label class=\\\"text-danger\\\" *ngIf=\\\"u.touched && (u.pristine || u.value=='')\\\">\\n                UserName Required\\n              </label>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"pw\\\">Password :</label>\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"pwd\\\" id=\\\"pw\\\" placeholder=\\\"Enter Password\\\" [(ngModel)]=pwd #p=\\\"ngModel\\\" required>\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"p.touched && (p.pristine || p.value=='')\\\">\\n                Password Required\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"rp\\\">ReEnter Password :</label>\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"cpw\\\" id=\\\"rp\\\" placeholder=\\\"Re-Enter Password\\\"  [(ngModel)]=rpwd #rp=\\\"ngModel\\\"  required>\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"rp.touched && (rp.pristine || rp.value=='')\\\">\\n                Password Required\\n              </div>\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"rp.dirty && ( rp.value!=p.value) && rp.value!=''\\\">\\n                Password not Matched\\n              </div>\\n            </div>\\n            <div class=\\\"form-check form-check-inline\\\">\\n              <label class=\\\"form-check-label\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"gender\\\" value=\\\"male\\\" [(ngModel)]=gender required> Male\\n              </label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n              <label class=\\\"form-check-label\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"gender\\\" value=\\\"female\\\" [(ngModel)]=gender> Female\\n              </label>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"offset-sm-4 col-sm-4\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success mt-3\\\" [disabled]=\\\"rf.invalid || ( rp.value!=p.value)\\\">Register</button>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n<select [(ngModel)]=\\\"selectbg\\\">\\n  <option *ngFor=\\\"let item of bg\\\" [value]=\\\"item\\\">{{item}}</option>\\n</select>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router'\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private route:Router,private ds:DataService) { }\n  uname:string=null;\n  email:string=null;\n  pwd:string=null;\n  rpwd:string=null;\n  gender:string=null;\n  dfname:string=null;\n  selectbg:string=null;\n  selectgender;\n  phone;\n  bg = [ 'O-', 'O+', 'B-', 'B+', 'A-', 'A+', 'AB-', 'AB+']\n  ngOnInit() {\n  }\n  register(data)\n  {\n    console.log(data);\n\n\n    this.ds.regDB(data).subscribe(r=>{\n      alert(r);\n    });\n    this.route.navigate(['/log']);\n\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { LogComponent } from './log/log.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { FunctionComponent } from './function/function.component';\nimport { HomeComponent } from './home/home.component';\nimport { MedicineComponent } from './medicine/medicine.component';\nimport { SalesComponent } from './sales/sales.component';\nimport { NewsaleComponent } from './newsale/newsale.component';\nimport { CompanyComponent } from './company/company.component';\nimport { CartComponent } from './cart/cart.component';\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot([\n      {path:\"\",redirectTo:\"/log\",pathMatch:\"full\"},\n      {path:\"log\",component:LogComponent,children:[\n        {path:\"\",component:LoginComponent},\n        {path:\"reg\",component:RegisterComponent},\n      ]},\n      {path:\"app\",component:FunctionComponent,children:[\n        {path:\"home\",component:HomeComponent},\n        {path:\"RequestBlood\",component:MedicineComponent},\n        {path:\"company\",component:CompanyComponent},\n        {path:\"sales\",component:SalesComponent},\n        {path:\"newsale\",component:NewsaleComponent},\n        {path:\"cart\",component:CartComponent},\n      ]}\n    ])\n  ],\n  exports:[RouterModule]\n})\nexport class RouteModule { }\n","module.exports = \"\"","module.exports = \"Search<input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchTerm\\\">\\n<div class=\\\"container mt-5\\\">\\n    <table class=\\\"table\\\" border=\\\"2\\\">\\n        <thead class=\\\"thead-dark\\\">\\n            <th>Sno</th>\\n            <th>Name</th>\\n            <th>Age</th>\\n        </thead>\\n        <tr *ngFor=\\\"let i of data | search:searchTerm\\\">\\n            <td>{{i.sno}}</td>\\n            <td>{{i.name}}</td>\\n            <td>{{i.age}}</td>\\n        </tr>\\n    </table>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sales',\n  templateUrl: './sales.component.html',\n  styleUrls: ['./sales.component.css']\n})\nexport class SalesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"search\"\n})\nexport class SearchPipe implements PipeTransform {\n  transform(data: any[], searchTerm: string, s: string): any {\n    console.log(data);\n    console.log(\"s value\" + \"   \" + s);\n    if (!data || !searchTerm) {\n      return data;\n    } else if (s == \"price\") {\n      return data.filter(x => x.price.indexOf(searchTerm) !== -1);\n    } else {\n      return data.filter(\n        x => x['selectbg'].toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1\n      );\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}